using JCsTools.JCQ.IcqInterface.DataTypes;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Jcq.IcqProtocol.Tests
{
    [TestClass]
    public class SnacFamily0BTests
    {

        //[TestMethod]
        //public void Snac0B01DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0xE7, 0xC3, 0x00, 0x0C, 0x00, 0x0B, 0x00, 0x01, 0x00, 0x00, 0x7F, 0xDE, 0x54, 0x31, 
        //        0x00, 0x0E
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac0B01>(f);

        //    Assert.Inconclusive("Verify that Snac0B01 was deserialized correctly.");
        //}

        [TestMethod]
        public void Snac0B02DeserializeTest()
        {
            var data = new byte[]
            {
                0x2A, 0x02, 0x38, 0xC7, 0x00, 0x0C, 0x00, 0x0B, 0x00, 0x02, 0x00, 0x00, 0x85, 0x1B, 0x44, 0x5C, 
                0x04, 0xB0
            };

            var f = SerializationTools.DeserializeFlap(data);
            var s = SerializationTools.DeserializeSnac<Snac0B02>(f);

            Assert.Inconclusive("Verify that Snac0B02 was deserialized correctly.");
        }

        [TestMethod]
        public void Snac0B03DeserializeTest()
        {
            var data = new byte[]
            {
                0x2A, 0x02, 0x1B, 0xA6, 0x00, 0x9B, 0x00, 0x0B, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 
                0x00, 0x09, 0x00, 0x8D, 0x3E, 0xDE, 0x02, 0x8E, 0x3E, 0xDE, 0x2C, 0xBE, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 
                0x0A, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x20, 0x39, 0x38, 0x00, 0x0D, 0x34, 0x2E, 0x31, 
                0x30, 0x2E, 0x36, 0x37, 0x37, 0x36, 0x36, 0x34, 0x34, 0x36, 0x00, 0x0D, 0x49, 0x6E, 0x74, 0x65, 
                0x6C, 0x20, 0x50, 0x65, 0x6E, 0x74, 0x69, 0x75, 0x6D, 0x00, 0x2F, 0x4D, 0x69, 0x63, 0x72, 0x6F, 
                0x73, 0x6F, 0x66, 0x74, 0x20, 0x43, 0x6F, 0x72, 0x70, 0x6F, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x20, 
                0x42, 0x53, 0x44, 0x20, 0x53, 0x6F, 0x63, 0x6B, 0x65, 0x74, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 
                0x6F, 0x72, 0x20, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x00, 0x09, 0x34, 0x2E, 0x31, 0x30, 
                0x10, 
                0x2E, 0x31, 0x39, 0x39, 0x38, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 
                0x02, 0x2A, 0x02, 0x1B, 0xA7, 0x00, 0x0C, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 
                0x04, 0x00, 0x18, 0x2A, 0x02, 0x1B, 0xA8, 0x00, 0x0C, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 
                0x02, 0x00, 0x04, 0x00, 0x0F, 0x2A, 0x02, 0x1B, 0xA9, 0x00, 0x0A, 0x00, 0x02, 0x00, 0x09, 0x00, 
                0x00, 0x00, 0x01, 0x00, 0x09, 0x2A, 0x02, 0x1B, 0xAA, 0x00, 0x0A, 0x00, 0x02, 0x00, 0x0F, 0x00, 
                0x00, 0x00, 0x02, 0x00, 0x0F
            };

            var f = SerializationTools.DeserializeFlap(data);
            var s = SerializationTools.DeserializeSnac<Snac0B03>(f);

            Assert.Inconclusive("Verify that Snac0B03 was deserialized correctly.");
        }

        [TestMethod]
        public void Snac0B04DeserializeTest()
        {
            var data = new byte[]
            {
                0x2A, 0x02, 0x38, 0xC7, 0x00, 0x0A, 0x00, 0x0B, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02
            };

            var f = SerializationTools.DeserializeFlap(data);
            var s = SerializationTools.DeserializeSnac<Snac0B04>(f);

            Assert.Inconclusive("Verify that Snac0B04 was deserialized correctly.");
        }


    }
}