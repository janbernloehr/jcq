using JCsTools.JCQ.IcqInterface.DataTypes;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Jcq.IcqProtocol.Tests
{
    [TestClass]
    public class SnacFamily10Tests
    {

        //[TestMethod]
        //public void Snac1001DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0xE1, 0xCA, 0x00, 0x0C, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x99, 0xD0, 0x07, 0x62, 
        //        0x00, 0x05
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1001>(f);

        //    Assert.Inconclusive("Verify that Snac1001 was deserialized correctly.");
        //}

        [TestMethod]
        public void Snac1002DeserializeTest()
        {
            var data = new byte[]
            {
                0x02, 
                0x01, 
                0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 
                0x00, 0x01, 0x01, 0x95, 0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x20, 0x00, 0x20, 0x00, 
                0x00, 
                0x00, 
                0x00, 
                0x00, 0x00, 0x00, 
                0x00, 0x80, 
                0x00, 0x60, 
                0x00, 
                0x40, 0x80, 0x00, 
                0x40, 
                0x40, 
                0x80, 
                0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x21, 
                0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x21, 
                0x30, 0x43, 0x72, 0x65, 0x61, 
                0x74, 
                0x72, 
                0x20, 0x50, 
                0x79, 0x56, 0x69, 0x65, 0x77, 
                0x20, 0x56, 
                0x65, 0x72, 0x73, 0x69, 
                0x20, 0x33, 
                0x32, 0x30, 0x20, 0x62, 0x79, 0x20, 0x50, 
                0x20, 
                0x79, 0x62, 0x79, 0x74, 0x65, 0x73, 
                0x00, 
                0x00, 0x00, 
                0x00, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x04, 
                0x10, 
                0x49, 
                0x38, 
                0x83, 
                0x60, 
                0x30, 
                0x44, 
                0x37, 0x02, 
                0x20, 
                0x68, 
                0x05, 0x72, 
                0x47, 0x92, 
                0x19, 
                0x06, 
                0x66, 0x13, 0x12, 0x29, 0x01, 
                0x70, 0x90, 
                0x83, 0x80, 
                0x84, 
                0x60, 
                0x34, 
                0x23, 0x68, 0x85, 
                0x49, 
                0x74, 
                0x40, 
                0x71, 0x69, 
                0x12, 
                0x76, 0x12, 0x78, 
                0x84, 0x07, 
                0x64, 0x28, 0x67, 
                0x30, 0x09, 
                0x01, 0x84, 
                0x86, 0x01, 0x09, 0x93, 
                0x33, 0x66, 
                0x39, 
                0x08, 0x91, 
                0x93, 
                0x51, 
                0x92, 
                0x92, 
                0x84, 
                0x94, 0x88, 0x59, 
                0x94, 0x79, 0x70, 
                0x94, 
                0x26, 0x97, 
                0x99, 
                0x54, 
                0x49, 0x89, 
                0x37, 
                0x87, 
                0x96, 
                0x03, 0x66, 
                0x59, 
                0x82, 
                0x32, 
                0x94, 
                0x30, 0x03, 
                0x21, 0x95, 0x74, 
                0x04, 
                0x34, 0x57, 
                0x83, 0x92, 0x02, 
                0x89, 0x25, 0x35, 
                0x39, 0x21, 
                0x03, 0x10, 
                0x16, 0x76, 0x08, 
                0x52, 0x88, 0x26, 0x38, 
                0x90, 
                0x50, 
                0x09, 
                0x52, 
                0x18, 0x99, 0x23, 0x64, 0x85, 
                0x20, 
                0x10, 0x01, 0x00
            };

            var f = SerializationTools.DeserializeFlap(data);
            var s = SerializationTools.DeserializeSnac<Snac1002>(f);

            Assert.Inconclusive("Verify that Snac1002 was deserialized correctly.");
        }

        [TestMethod]
        public void Snac1003DeserializeTest()
        {
            var data = new byte[]
            {
                0x02, 0x98, 
                0x00, 
                0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 
                0x00, 0x00, 0x01, 0x01, 0x10, 
                0x65, 0x56, 0x88, 
                0x92, 
                0x62
            };

            var f = SerializationTools.DeserializeFlap(data);
            var s = SerializationTools.DeserializeSnac<Snac1003>(f);

            Assert.Inconclusive("Verify that Snac1003 was deserialized correctly.");
        }

        [TestMethod]
        public void Snac1004DeserializeTest()
        {
            var data = new byte[]
            {
                0x2A, 0x02, 0x08, 0x91, 0x00, 0x2A, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 
                0x0A, 0x54, 0x72, 0x6F, 0x6D, 0x70, 0x65, 0x74, 0x65, 0x4A, 0x43, 0x01, 0x00, 0x01, 0x01, 0x10, 
                0xB7, 0x39, 0xD9, 0x69, 0x2B, 0x15, 0x60, 0x36, 0x57, 0xC5, 0xC9, 0xB4, 0x89, 0xC9, 0x13, 0x82
            };

            var f = SerializationTools.DeserializeFlap(data);
            var s = SerializationTools.DeserializeSnac<Snac1004>(f);

            Assert.Inconclusive("Verify that Snac1004 was deserialized correctly.");
        }

        //[TestMethod]
        //public void Snac1006DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x61, 0x1E, 0x00, 0x29, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x5D, 0x2E, 0x00, 0x06, 
        //        0x09, 0x33, 0x34, 0x34, 0x30, 0x35, 0x39, 0x31, 0x37, 0x39, 0x01, 0x00, 0x01, 0x01, 0x10, 0xEC, 
        //        0x7B, 0x60, 0x67, 0xCF, 0xD1, 0x01, 0x99, 0x0C, 0xBD, 0x33, 0xF9, 0x00, 0xFC, 0x4B, 0x9B
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1006>(f);

        //    Assert.Inconclusive("Verify that Snac1006 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1007DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x1C, 0x8C, 0x16, 0x4A, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x5D, 0x2E, 0x00, 0x06, 
        //        0x09, 0x33, 0x34, 0x34, 0x30, 0x35, 0x39, 0x31, 0x37, 0x39, 0x00, 0x01, 0x01, 0x10, 0xEC, 0x7B, 
        //        0x60, 0x67, 0xCF, 0xD1, 0x01, 0x99, 0x0C, 0xBD, 0x33, 0xF9, 0x00, 0xFC, 0x4B, 0x9B, 0x00, 0x00, 
        //        0x01, 0x01, 0x10, 0xEC, 0x7B, 0x60, 0x67, 0xCF, 0xD1, 0x01, 0x99, 0x0C, 0xBD, 0x33, 0xF9, 0x00, 
        //        0xFC, 0x4B, 0x9B, 0x16, 0x0B, 0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 
        //        0x01, 0x01, 0x01, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43, 0x00, 0x01, 0x01, 
        //        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
        //        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
        //        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
        //        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFF, 0xDB, 
        //        0x00, 0x43, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
        //        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
        //        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
        //        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
        //        0x01, 0x01, 0x01, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00, 0x40, 0x00, 0x34, 0x03, 0x01, 0x22, 0x00, 
        //        0x02, 0x11, 0x01, 0x03, 0x11, 0x01, 0xFF, 0xC4, 0x00, 0x1F, 0x00, 0x00, 0x01, 0x05, 0x01, 0x01, 
        //        0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 
        //        0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0xFF, 0xC4, 0x00, 0xB5, 0x10, 0x00, 0x02, 0x01, 0x03, 
        //        0x03, 0x02, 0x04, 0x03, 0x05, 0x05, 0x04, 0x04, 0x00, 0x00, 0x01, 0x7D, 0x01, 0x02, 0x03, 0x00, 
        //        0x04, 0x11, 0x05, 0x12, 0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07, 0x22, 0x71, 0x14, 0x32, 
        //        0x81, 0x91, 0xA1, 0x08, 0x23, 0x42, 0xB1, 0xC1, 0x15, 0x52, 0xD1, 0xF0, 0x24, 0x33, 0x62, 0x72, 
        //        0x82, 0x09, 0x0A, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x34, 0x35, 
        //        0x45, 
        //        0x36, 0x37, 0x38, 0x39, 0x3A, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x53, 0x54, 0x55, 
        //        0x56, 0x57, 0x58, 0x59, 0x5A, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x73, 0x74, 0x75, 
        //        0x84, 0x7C, 0x61, 0xF6, 0x2F, 0x82, 0x9E, 0x08, 0xF8, 0xF5, 0xE1, 0x4F, 0x00, 0xDF, 0xE9, 0x96, 
        //        0xFA, 0xC6, 0x9B, 0xA3, 0x6A, 0xFF, 0x00, 0x11, 0xBC, 0xBD, 0x6E, 0x33, 0x7B, 0x75, 0x7C, 0xB1, 
        //        0xDE, 0x6B, 0xA7, 0xC2, 0xDE, 0x21, 0xD4, 0x74, 0x21, 0xAC, 0x6A, 0x56, 0x10, 0x58, 0xEA, 0x3A, 
        //        0x85, 0x9D, 0x85, 0xD4, 0xA9, 0xA2, 0xCF, 0x72, 0xDE, 0x1F, 0x79, 0x6E, 0x24, 0xD2, 0x5E, 0xEE, 
        //        0xE0, 0xAF, 0x62, 0x78, 0x7B, 0xCD, 0xDA, 0x35, 0xE2, 0xAE, 0x92, 0x55, 0x27, 0x4A, 0x13, 0x49, 
        //        0x72, 0x2F, 0x7A, 0x0E, 0xB5, 0xE3, 0x27, 0x76, 0xDC, 0x5D, 0x9A, 0xD9, 0xA4, 0xEE, 0x8C, 0x28, 
        //        0xE4, 0xB8, 0xBA, 0x94, 0xA9, 0xCE, 0x58, 0x8C, 0xB9, 0x4A, 0x51, 0x8B, 0x92, 0x78, 0xC4, 0xDF, 
        //        0x35, 0xA3, 0xCC, 0xEE, 0xA9, 0xC9, 0x35, 0x74, 0xDA, 0x92, 0x94, 0x94, 0x92, 0x52, 0x52, 0x69, 
        //        0xA6, 0x7F, 0xFF, 0xD9
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1007>(f);

        //    Assert.Inconclusive("Verify that Snac1007 was deserialized correctly.");
        //}


    }
}