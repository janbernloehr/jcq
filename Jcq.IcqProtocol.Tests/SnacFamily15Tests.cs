// --------------------------------------------------------------------------------------------------------------------
// <copyright file="SnacFamily15Tests.cs" company="Jan-Cornelius Molnar">
// The MIT License (MIT)
// 
// Copyright (c) 2015 Jan-Cornelius Molnar
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// </copyright>
// --------------------------------------------------------------------------------------------------------------------

using Jcq.IcqProtocol.DataTypes;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Jcq.IcqProtocol.Tests
{
    [TestClass]
    public class SnacFamily15Tests
    {
        //[TestMethod]
        //public void Snac1501DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0xE1, 0xCA, 0x00, 0x0C, 0x00, 0x15, 0x00, 0x01, 0x00, 0x00, 0x7D, 0xC9, 0x71, 0x68, 
        //        0x00, 0x0E
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1501>(f);

        //    Assert.Inconclusive("Verify that Snac1501 was deserialized correctly.");
        //}

        [TestMethod]
        public void Snac1502DeserializeTest()
        {
            var data = new byte[]
            {
                0x2A, 0x02, 0x79, 0x75, 0x00, 0x1E, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02,
                0x00, 0x01, 0x00, 0x10, 0x0E, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x08, 0x00, 0x2E, 0x04,
                0x06, 0x00, 0x31, 0x32, 0x33, 0x34, 0x35, 0x00
            };

            Flap f = SerializationTools.DeserializeFlap(data);
            var s = SerializationTools.DeserializeSnac<Snac1502>(f);

            Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        }

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x5A, 0xCF, 0x00, 0x18, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x0A, 0x08, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0x3C, 0x00, 0x02, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x5A, 0xD4, 0x00, 0x18, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x0A, 0x08, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0x3E, 0x00, 0x07, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x05, 0x5F, 0x00, 0xB2, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0xA4, 0xA2, 0x00, 0x31, 0xDE, 0x0B, 0x00, 0xD0, 0x07, 0x0E, 0x00, 0xEA, 0x03, 
        //        0x09, 0x00, 0x4E, 0x69, 0x63, 0x6B, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x0A, 0x00, 0x46, 0x69, 0x72, 
        //        0x73, 0x74, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x09, 0x00, 0x4C, 0x61, 0x73, 0x74, 0x4E, 0x61, 0x6D, 
        //        0x65, 0x00, 0x11, 0x00, 0x70, 0x75, 0x70, 0x6B, 0x69, 0x6E, 0x40, 0x65, 0x6D, 0x61, 0x69, 0x6C, 
        //        0x2E, 0x6F, 0x72, 0x67, 0x00, 0x09, 0x00, 0x48, 0x6F, 0x6D, 0x65, 0x63, 0x69, 0x74, 0x79, 0x00, 
        //        0x04, 0x00, 0x53, 0x74, 0x61, 0x00, 0x11, 0x00, 0x2B, 0x37, 0x20, 0x28, 0x34, 0x32, 0x31, 0x32, 
        //        0x12, 
        //        0x29, 0x20, 0x48, 0x50, 0x48, 0x4F, 0x4E, 0x45, 0x00, 0x0F, 0x00, 0x2B, 0x37, 0x20, 0x28, 0x34, 
        //        0x32, 0x31, 0x32, 0x29, 0x20, 0x48, 0x46, 0x41, 0x58, 0x00, 0x0B, 0x00, 0x48, 0x4F, 0x4D, 0x45, 
        //        0x53, 0x54, 0x52, 0x45, 0x45, 0x54, 0x00, 0x13, 0x00, 0x2B, 0x37, 0x20, 0x28, 0x39, 0x30, 0x32, 
        //        0x02, 
        //        0x29, 0x20, 0x48, 0x43, 0x45, 0x4C, 0x4C, 0x20, 0x53, 0x4D, 0x53, 0x00, 0x06, 0x00, 0x31, 0x31, 
        //        0x11, 
        //        0x31, 0x31, 0x31, 0x00, 0x07, 0x00, 0xEC, 0x01
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x05, 0x68, 0x00, 0xA5, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x97, 0x95, 0x00, 0x31, 0xDE, 0x0B, 0x00, 0xD0, 0x07, 0x17, 0x00, 0xF3, 0x03, 
        //        0x06, 0x00, 0x57, 0x43, 0x69, 0x74, 0x79, 0x00, 0x04, 0x00, 0x53, 0x74, 0x61, 0x00, 0x11, 0x00, 
        //        0x2B, 0x37, 0x20, 0x28, 0x34, 0x32, 0x31, 0x32, 0x29, 0x20, 0x57, 0x50, 0x48, 0x4F, 0x4E, 0x45, 
        //        0x00, 0x0F, 0x00, 0x2B, 0x37, 0x20, 0x28, 0x34, 0x32, 0x31, 0x32, 0x29, 0x20, 0x57, 0x46, 0x41, 
        //        0xFA, 
        //        0x58, 0x00, 0x0C, 0x00, 0x57, 0x4F, 0x52, 0x4B, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x00, 
        //        0x06, 0x00, 0x31, 0x31, 0x31, 0x31, 0x31, 0x00, 0x07, 0x00, 0x09, 0x00, 0x57, 0x43, 0x6F, 0x6D, 
        //        0x70, 0x61, 0x6E, 0x79, 0x00, 0x0C, 0x00, 0x57, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6D, 0x65, 
        //        0x6E, 0x74, 0x00, 0x0A, 0x00, 0x57, 0x50, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x07, 
        //        0x00, 0x18, 0x00, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x77, 0x6F, 0x72, 0x6B, 0x2E, 0x77, 
        //        0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2E, 0x6F, 0x72, 0x67, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x05, 0x6D, 0x00, 0x3E, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x12, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x30, 0x2E, 0x00, 0x31, 0xDE, 0x0B, 0x00, 0xD0, 0x07, 0x1C, 0x00, 0xFD, 0x03, 
        //        0x17, 0x00, 0x02, 0x18, 0x00, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x68, 0x6F, 0x6D, 0x65, 
        //        0x2E, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2E, 0x6F, 0x72, 0x67, 0x00, 0xBB, 0x07, 0x03, 
        //        0x0E, 0x26, 0x0C, 0x0D
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x05, 0x73, 0x00, 0x39, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x2B, 0x29, 0x00, 0x31, 0xDE, 0x0B, 0x00, 0xD0, 0x07, 0x22, 0x00, 0x06, 0x04, 
        //        0x1D, 0x00, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x70, 
        //        0x65, 0x72, 0x73, 0x6F, 0x6E, 0x61, 0x6C, 0x20, 0x6E, 0x6F, 0x74, 0x65, 0x73, 0x2E, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x05, 0x77, 0x00, 0xAB, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x9D, 0x9B, 0x00, 0x31, 0xDE, 0x0B, 0x00, 0xD0, 0x07, 0x26, 0x00, 0x0B, 0x04, 
        //        0x06, 0x01, 0x15, 0x00, 0x65, 0x6D, 0x61, 0x69, 0x6C, 0x32, 0x40, 0x67, 0x69, 0x67, 0x61, 0x62, 
        //        0x69, 0x74, 0x7A, 0x65, 0x2E, 0x6F, 0x72, 0x67, 0x00, 0x00, 0x15, 0x00, 0x65, 0x6D, 0x61, 0x69, 
        //        0x6C, 0x33, 0x40, 0x67, 0x69, 0x67, 0x61, 0x62, 0x69, 0x74, 0x7A, 0x65, 0x2E, 0x6F, 0x72, 0x67, 
        //        0x00, 0x00, 0x15, 0x00, 0x65, 0x6D, 0x61, 0x69, 0x6C, 0x34, 0x40, 0x67, 0x69, 0x67, 0x61, 0x62, 
        //        0x69, 0x74, 0x7A, 0x65, 0x2E, 0x6F, 0x72, 0x67, 0x00, 0x01, 0x15, 0x00, 0x65, 0x6D, 0x61, 0x69, 
        //        0x6C, 0x35, 0x40, 0x67, 0x69, 0x67, 0x61, 0x62, 0x69, 0x74, 0x7A, 0x65, 0x2E, 0x6F, 0x72, 0x67, 
        //        0x00, 0x01, 0x15, 0x00, 0x65, 0x6D, 0x61, 0x69, 0x6C, 0x36, 0x40, 0x67, 0x69, 0x67, 0x61, 0x62, 
        //        0x69, 0x74, 0x7A, 0x65, 0x2E, 0x6F, 0x72, 0x67, 0x00, 0x01, 0x15, 0x00, 0x65, 0x6D, 0x61, 0x69, 
        //        0x6C, 0x37, 0x40, 0x67, 0x69, 0x67, 0x61, 0x62, 0x69, 0x74, 0x7A, 0x65, 0x2E, 0x6F, 0x72, 0x67, 
        //        0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x05, 0x7D, 0x00, 0x71, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x63, 0x61, 0x00, 0x31, 0xDE, 0x0B, 0x00, 0xD0, 0x07, 0x2C, 0x00, 0x10, 0x04, 
        //        0x04, 0x64, 0x00, 0x10, 0x00, 0x43, 0x72, 0x61, 0x66, 0x74, 0x73, 0x2C, 0x6B, 0x65, 0x79, 0x77, 
        //        0x6F, 0x72, 0x64, 0x31, 0x00, 0x67, 0x00, 0x14, 0x00, 0x41, 0x75, 0x74, 0x6F, 0x67, 0x72, 0x61, 
        //        0x70, 0x68, 0x73, 0x2C, 0x6B, 0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x32, 0x00, 0x6B, 0x00, 0x12, 
        //        0x00, 0x6B, 0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x33, 0x2C, 0x4E, 0x69, 0x6E, 0x74, 0x65, 0x6E, 
        //        0x64, 0x6F, 0x00, 0x6F, 0x00, 0x10, 0x00, 0x6B, 0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x34, 0x2C, 
        //        0x54, 0x72, 0x61, 0x76, 0x65, 0x6C, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x05, 0x7F, 0x00, 0x70, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x62, 0x60, 0x00, 0x31, 0xDE, 0x0B, 0x00, 0xD0, 0x07, 0x2E, 0x00, 0x1A, 0x04, 
        //        0x03, 0x2E, 0x01, 0x0A, 0x00, 0x70, 0x6B, 0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x31, 0x00, 0x2C, 
        //        0x01, 0x0A, 0x00, 0x70, 0x6B, 0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x32, 0x00, 0x2D, 0x01, 0x0A, 
        //        0x00, 0x70, 0x6B, 0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x33, 0x00, 0x03, 0xC9, 0x00, 0x0A, 0x00, 
        //        0x67, 0x6B, 0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x31, 0x00, 0xC8, 0x00, 0x0A, 0x00, 0x67, 0x6B, 
        //        0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x32, 0x00, 0xCC, 0x00, 0x0A, 0x00, 0x67, 0x6B, 0x65, 0x79, 
        //        0x77, 0x6F, 0x72, 0x64, 0x33, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x05, 0x87, 0x00, 0x1E, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x10, 0x0E, 0x00, 0x31, 0xDE, 0x0B, 0x00, 0xD0, 0x07, 0x36, 0x00, 0x24, 0x04, 
        //        0x00, 0x01, 0x00, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x75, 0x00, 0x1E, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x10, 0x0E, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x08, 0x00, 0x2E, 0x04, 
        //        0x06, 0x00, 0x31, 0x32, 0x33, 0x34, 0x35, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x05, 0x84, 0x00, 0x36, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x28, 0x26, 0x00, 0x31, 0xDE, 0x0B, 0x00, 0xD0, 0x07, 0x33, 0x00, 0x42, 0x04, 
        //        0x01, 0x8A, 0x03, 0x17, 0x00, 0x48, 0x70, 0x61, 0x67, 0x65, 0x20, 0x64, 0x65, 0x73, 0x63, 0x72, 
        //        0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x74, 0x65, 0x78, 0x74, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x75, 0x00, 0x1E, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x10, 0x0E, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x08, 0x00, 0xB2, 0x04, 
        //        0x8F, 0xE4, 0x5E, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x75, 0x00, 0x1E, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x10, 0x0E, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x08, 0x00, 0xBA, 0x04, 
        //        0x8F, 0xE4, 0x5E, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x75, 0x00, 0x1E, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x10, 0x0E, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x08, 0x00, 0xC4, 0x04, 
        //        0x8F, 0xE4, 0x5E, 0x00, 0x04, 0x00, 0x31, 0x32, 0x33, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x75, 0x00, 0x1E, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x10, 0x0E, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x08, 0x00, 0xD0, 0x04, 
        //        0x8F, 0xE4, 0x5E, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x77, 0x00, 0x3C, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x09, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x2E, 0x2C, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x0A, 0x00, 0x15, 0x05, 
        //        0x09, 0x00, 0x4C, 0x61, 0x73, 0x74, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x09, 0x00, 0x4E, 0x69, 0x63, 
        //        0x6B, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x0A, 0x00, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4E, 0x61, 0x6D, 
        //        0x65, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x75, 0x00, 0x1E, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x10, 0x0E, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x08, 0x00, 0x1F, 0x05, 
        //        0x8F, 0xE4, 0x5E, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x78, 0x00, 0x31, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x23, 0x21, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x0B, 0x00, 0x29, 0x05, 
        //        0x15, 0x00, 0x70, 0x75, 0x70, 0x6B, 0x69, 0x6E, 0x40, 0x67, 0x69, 0x67, 0x61, 0x62, 0x69, 0x74, 
        //        0x7A, 0x65, 0x2E, 0x6F, 0x72, 0x67, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x7D, 0x00, 0xD9, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0xCB, 0xC9, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x10, 0x00, 0x33, 0x05, 
        //        0x0A, 0x00, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x09, 0x00, 0x4C, 0x61, 
        //        0x73, 0x74, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x09, 0x00, 0x4E, 0x69, 0x63, 0x6B, 0x4E, 0x61, 0x6D, 
        //        0x65, 0x00, 0x0F, 0x00, 0x45, 0x6D, 0x61, 0x69, 0x6C, 0x40, 0x65, 0x6D, 0x61, 0x69, 0x6C, 0x2E, 
        //        0x72, 0x75, 0x00, 0x12, 0x00, 0x16, 0x00, 0x02, 0x26, 0x05, 0x00, 0x43, 0x69, 0x74, 0x79, 0x00, 
        //        0x03, 0x00, 0x53, 0x74, 0x00, 0x07, 0x00, 0x08, 0x00, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x6E, 0x79, 
        //        0x00, 0x0B, 0x00, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0x09, 0x00, 
        //        0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x01, 0x2E, 0x01, 0x0C, 0x00, 0x63, 0x6F, 
        //        0x6C, 0x6C, 0x65, 0x67, 0x65, 0x5F, 0x6B, 0x65, 0x79, 0x00, 0x68, 0x00, 0x1D, 0x00, 0x63, 0x6F, 
        //        0x6D, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x5F, 0x6B, 0x65, 0x79, 0x2C, 0x63, 0x6F, 0x6D, 0x70, 
        //        0x75, 0x74, 0x65, 0x72, 0x73, 0x5F, 0x6B, 0x65, 0x79, 0x32, 0x00, 0xCD, 0x00, 0x0E, 0x00, 0x46, 
        //        0x61, 0x6E, 0x20, 0x63, 0x6C, 0x75, 0x62, 0x73, 0x20, 0x6B, 0x65, 0x79, 0x00, 0xD5, 0x0A, 0x0D, 
        //        0x00, 0x61, 0x6D, 0x69, 0x67, 0x61, 0x5F, 0x68, 0x70, 0x5F, 0x6B, 0x65, 0x79, 0x00, 0x01
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x7A, 0x00, 0x39, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x2B, 0x29, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x0D, 0x00, 0x3D, 0x05, 
        //        0x0A, 0x00, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x09, 0x00, 0x4C, 0x61, 
        //        0x73, 0x74, 0x2A, 0x61, 0x6D, 0x65, 0x00, 0x06, 0x00, 0x4E, 0x69, 0x63, 0x6B, 0x2A, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x79, 0x00, 0x2F, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x21, 0x1F, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x0C, 0x00, 0x47, 0x05, 
        //        0x13, 0x00, 0x70, 0x75, 0x70, 0x2A, 0x40, 0x67, 0x69, 0x67, 0x61, 0x62, 0x69, 0x74, 0x7A, 0x65, 
        //        0x2E, 0x6F, 0x72, 0x67, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x7D, 0x00, 0xD9, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0xCB, 0xC9, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x10, 0x00, 0x51, 0x05, 
        //        0x0A, 0x00, 0x46, 0x2A, 0x72, 0x73, 0x74, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x09, 0x00, 0x4C, 0x61, 
        //        0x73, 0x74, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x09, 0x00, 0x4E, 0x69, 0x63, 0x6B, 0x4E, 0x61, 0x6D, 
        //        0x65, 0x00, 0x0F, 0x00, 0x45, 0x6D, 0x61, 0x69, 0x6C, 0x40, 0x65, 0x6D, 0x61, 0x69, 0x6C, 0x2E, 
        //        0x72, 0x75, 0x00, 0x12, 0x00, 0x16, 0x00, 0x02, 0x26, 0x05, 0x00, 0x43, 0x69, 0x74, 0x79, 0x00, 
        //        0x03, 0x00, 0x53, 0x74, 0x00, 0x07, 0x00, 0x08, 0x00, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x6E, 0x79, 
        //        0x00, 0x0B, 0x00, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0x09, 0x00, 
        //        0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x01, 0x2E, 0x01, 0x0C, 0x00, 0x63, 0x6F, 
        //        0x6C, 0x6C, 0x65, 0x67, 0x65, 0x5F, 0x6B, 0x65, 0x79, 0x00, 0x68, 0x00, 0x1D, 0x00, 0x63, 0x6F, 
        //        0x6D, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x5F, 0x6B, 0x65, 0x79, 0x2C, 0x63, 0x6F, 0x6D, 0x70, 
        //        0x75, 0x74, 0x65, 0x72, 0x73, 0x5F, 0x6B, 0x65, 0x79, 0x32, 0x00, 0xCD, 0x00, 0x0E, 0x00, 0x46, 
        //        0x61, 0x6E, 0x20, 0x63, 0x6C, 0x75, 0x62, 0x73, 0x20, 0x6B, 0x65, 0x79, 0x00, 0xD5, 0x0A, 0x0D, 
        //        0x00, 0x61, 0x6D, 0x69, 0x67, 0x61, 0x5F, 0x68, 0x70, 0x5F, 0x6B, 0x65, 0x79, 0x00, 0x01
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x1E, 0x90, 0x01, 0x14, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x02, 
        //        0x00, 0x01, 0x01, 0x06, 0x04, 0x01, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x11, 0x00, 0x5F, 0x05, 
        //        0x90, 0x01, 0x07, 0x00, 0x05, 0x00, 0x43, 0x69, 0x74, 0x79, 0x00, 0xAE, 0x01, 0x0A, 0x00, 0x08, 
        //        0x00, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x6E, 0x79, 0x00, 0xB8, 0x01, 0x0D, 0x00, 0x0B, 0x00, 0x44, 
        //        0x65, 0x70, 0x61, 0x72, 0x74, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0xC2, 0x01, 0x0B, 0x00, 0x09, 0x00, 
        //        0x50, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x68, 0x01, 0x04, 0x00, 0x1E, 0x00, 0x27, 
        //        0x00, 0x7C, 0x01, 0x01, 0x00, 0x02, 0x86, 0x01, 0x02, 0x00, 0x26, 0x00, 0xA4, 0x01, 0x02, 0x00, 
        //        0x07, 0x00, 0xCC, 0x01, 0x02, 0x00, 0x03, 0x00, 0xD6, 0x01, 0x10, 0x00, 0x2D, 0x01, 0x0C, 0x00, 
        //        0x50, 0x61, 0x73, 0x74, 0x4B, 0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x00, 0xEA, 0x01, 0x11, 0x00, 
        //        0x64, 0x00, 0x0D, 0x00, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 
        //        0x00, 0xFE, 0x01, 0x0F, 0x00, 0xCA, 0x00, 0x0B, 0x00, 0x4F, 0x72, 0x67, 0x4B, 0x65, 0x79, 0x77, 
        //        0x6F, 0x72, 0x64, 0x00, 0x12, 0x02, 0x04, 0x00, 0x2B, 0x0B, 0x00, 0x00, 0x40, 0x01, 0x0C, 0x00, 
        //        0x0A, 0x00, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x4A, 0x01, 0x0B, 0x00, 
        //        0x09, 0x00, 0x4C, 0x61, 0x73, 0x74, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x54, 0x01, 0x0B, 0x00, 0x09, 
        //        0x00, 0x4E, 0x69, 0x63, 0x6B, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x26, 0x02, 0x11, 0x00, 0x0F, 0x00, 
        //        0x47, 0x65, 0x6E, 0x65, 0x72, 0x61, 0x6C, 0x4B, 0x65, 0x79, 0x77, 0x6F, 0x72, 0x64, 0x00, 0x5E, 
        //        0x01, 0x12, 0x00, 0x10, 0x00, 0x45, 0x6D, 0x61, 0x69, 0x6C, 0x40, 0x65, 0x6D, 0x61, 0x69, 0x6C, 
        //        0x2E, 0x6F, 0x72, 0x67, 0x00, 0x30, 0x02, 0x01, 0x00, 0x01
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x23, 0x08, 0x00, 0x22, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x63, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x14, 0x12, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x64, 0x00, 0x69, 0x05, 
        //        0x36, 0x01, 0x04, 0x00, 0x90, 0xE4, 0x5E, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x79, 0x78, 0x00, 0x31, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x23, 0x21, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x0B, 0x00, 0x29, 0x05, 
        //        0x15, 0x00, 0x70, 0x75, 0x70, 0x6B, 0x69, 0x6E, 0x40, 0x67, 0x69, 0x67, 0x61, 0x62, 0x69, 0x74, 
        //        0x7A, 0x65, 0x2E, 0x6F, 0x72, 0x67, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x1E, 0x30, 0x00, 0x1C, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x0E, 0x0C, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x15, 0x00, 0x4E, 0x07, 
        //        0x03, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x2A, 0x02, 0x22, 0xA6, 0x00, 0x32, 0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x02, 
        //        0x00, 0x01, 0x00, 0x24, 0x22, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x04, 0x00, 0x98, 0x08, 
        //        0x16, 0x00, 0x3C, 0x6B, 0x65, 0x79, 0x3E, 0x42, 0x61, 0x6E, 0x6E, 0x65, 0x72, 0x73, 0x55, 0x52, 
        //        0x4C, 0x3C, 0x2F, 0x6B, 0x65, 0x79, 0x3E, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}
        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x7D, 0x7B, 0x00, 
        //        0xCA, 0xED, 0xB4, 0x03, 0xD0, 0x07, 0x12, 0x00, 0xA5, 0x0A, 0x05, 0x00, 0x2D, 0x00, 0x01, 0x00, 
        //        0xC1, 0x0E, 0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
        //        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 
        //        0x07, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0x99, 0xED, 0xB4, 0x03, 0x9A, 0xED, 0xB4, 0x03, 0x91, 0xE4, 
        //        0x5E, 0x00, 0xAA, 0xED, 0xB4, 0x03, 0x92, 0xE4, 0x5E, 0x00, 0xCA, 0xED, 0xB4, 0x03, 0x27, 0x00, 
        //        0x7B, 0x38, 0x33, 0x45, 0x41, 0x36, 0x43, 0x35, 0x30, 0x2D, 0x41, 0x38, 0x46, 0x36, 0x2D, 0x34, 
        //        0xC5, 
        //        0x42, 0x45, 0x44, 0x2D, 0x38, 0x35, 0x34, 0x41, 0x2D, 0x30, 0x30, 0x35, 0x36, 0x46, 0x36, 0x36, 
        //        0x4A, 
        //        0x66, 
        //        0x33, 0x46, 0x36, 0x31, 0x38, 0x7D, 0x00, 0x01, 0x00, 0x00, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x42, 0x00, 0x02, 0x00, 0x01, 0x00, 0x78, 0x76, 0x00, 
        //        0x8F, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x43, 0x00, 0xAF, 0x0A, 0x05, 0x00, 0x2D, 0x00, 0x01, 0x00, 
        //        0xC1, 0x0E, 0x55, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x7B, 0x39, 
        //        0x36, 0x33, 0x37, 0x36, 0x38, 0x37, 0x37, 0x2D, 0x32, 0x34, 0x2E, 0x70, 0x6C, 0x67, 0x10, 0x00, 
        //        0x7B, 0x39, 0x36, 0x33, 0x37, 0x36, 0x38, 0x37, 0x37, 0x2D, 0x32, 0x34, 0x2E, 0x70, 0x6C, 0x67, 
        //        0x87, 
        //        0x10, 0x00, 0x7B, 0x39, 0x36, 0x33, 0x37, 0x36, 0x38, 0x37, 0x37, 0x2D, 0x32, 0x34, 0x2E, 0x70, 
        //        0x76, 
        //        0x6C, 0x67, 0x10, 0x00, 0x7B, 0x30, 0x30, 0x46, 0x36, 0x32, 0x38, 0x30, 0x45, 0x2D, 0x45, 0x37, 
        //        0x0F, 
        //        0xE7, 
        //        0x2E, 0x70, 0x6C, 0x67, 0x10, 0x00, 0x7B, 0x45, 0x44, 0x32, 0x44, 0x45, 0x44, 0x34, 0x37, 0x2D, 
        //        0x31, 0x46, 0x2E, 0x70, 0x6C, 0x67
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x02, 0x14, 0x34, 0x02, 
        //        0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 
        //        0x00, 0x02, 
        //        0x00, 0x01, 0x02, 0x91, 
        //        0x02, 
        //        0x00, 
        //        0x07, 
        //        0x01, 0x15, 0x00, 0x12, 0x00, 0x70, 0x72, 0x69, 
        //        0x61, 0x72, 0x79, 0x40, 0x65, 
        //        0x61, 0x69, 
        //        0x72, 0x67, 0x00, 0x01, 
        //        0x01, 0x17, 0x00, 0x14, 0x00, 0x73, 
        //        0x65, 0x63, 
        //        0x64, 0x61, 0x72, 0x79, 0x40, 0x65, 
        //        0x61, 0x69, 
        //        0x72, 0x67, 0x00, 0x00, 
        //        0x01, 0x12, 0x00, 
        //        0x00, 0x74, 0x68, 0x69, 0x72, 0x64, 0x40, 
        //        0x61, 0x69, 
        //        0x72, 0x67, 0x00, 0x00, 0x76, 0x02, 0x15, 0x00, 0x13, 0x00, 
        //        0x37, 0x20, 0x28, 0x39, 0x30, 0x32, 0x29, 0x20, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 
        //        0x11, 
        //        0x31, 0x31, 0x00, 0x80, 0x02, 0x14, 0x00, 0x12, 0x00, 
        //        0x37, 0x20, 0x28, 0x34, 0x32, 0x31, 
        //        0x21, 
        //        0x32, 0x29, 0x20, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x00, 
        //        0x02, 0x14, 0x00, 0x12, 
        //        0x00, 
        //        0x37, 0x20, 0x28, 0x39, 0x30, 0x32, 0x29, 0x20, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 
        //        0x33, 
        //        0x33, 0x33, 0x00, 
        //        0x02, 0x14, 0x00, 0x12, 0x00, 
        //        0x37, 0x20, 0x28, 0x34, 0x32, 0x31, 
        //        0x21, 
        //        0x32, 0x29, 0x20, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x00, 
        //        0x02, 0x14, 0x00, 0x12, 
        //        0x00, 
        //        0x37, 0x20, 0x28, 0x34, 0x32, 0x31, 0x32, 0x29, 0x20, 0x35, 0x35, 0x35, 0x35, 0x35, 
        //        0x55, 
        //        0x35, 0x35, 0x00, 0x90, 0x01, 0x08, 0x00, 0x06, 0x00, 0x48, 0x43, 0x69, 0x74, 0x79, 0x00, 
        //        0x01, 0x06, 0x00, 0x04, 0x00, 0x48, 0x53, 0x74, 0x00, 
        //        0x01, 0x02, 0x00, 0x07, 0x00, 0x20, 
        //        0x03, 0x08, 0x00, 0x06, 0x00, 
        //        0x43, 0x69, 0x74, 0x79, 0x00, 
        //        0x03, 0x06, 0x00, 0x04, 
        //        0x00, 
        //        0x73, 0x74, 0x00, 0x34, 0x03, 0x02, 0x00, 0x07, 0x00, 0x62, 0x02, 
        //        0x00, 
        //        0x00, 0x48, 
        //        0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x00, 
        //        0x02, 0x04, 
        //        0x00, 0x67, 
        //        0x00, 0x00, 0x13, 0x02, 
        //        0x00, 0x00, 0x00, 0x18, 0x00, 0x68, 0x74, 0x74, 
        //        0x70, 
        //        0x68, 
        //        0x65, 
        //        0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 
        //        0x75, 0x72, 
        //        0x00, 0x16, 0x03, 0x01, 0x00, 
        //        0x54, 0x01, 
        //        0x00, 0x09, 0x00, 
        //        0x69, 0x63, 
        //        0x61, 
        //        0x65, 0x00, 0x40, 0x01, 
        //        0x00, 
        //        0x00, 0x46, 
        //        0x69, 0x72, 0x73, 0x74, 
        //        0x61, 
        //        0x65, 0x00, 
        //        0x01, 
        //        0x00, 0x09, 0x00, 
        //        0x61, 0x73, 0x74, 
        //        0x61, 
        //        0x65, 0x00, 0x58, 0x02, 0x12, 0x00, 0x10, 0x00, 0x75, 0x73, 
        //        0x65, 0x72, 
        //        0x61, 0x62, 
        //        0x75, 0x74, 
        //        0x74, 0x65, 0x78, 0x74, 0x00, 0x72, 0x01, 
        //        0x02, 0x00, 0x18, 0x00, 
        //        0x01, 0x01, 0x00, 0x02, 
        //        0x02, 0x06, 0x00, 
        //        0x07, 0x03, 
        //        0x00, 
        //        0x00, 0x86, 0x01, 0x02, 0x00, 0x44, 0x00, 0x86, 0x01, 0x02, 0x00, 0x37, 0x00, 0x86, 
        //        0x01, 0x02, 0x00, 0x26, 0x00, 
        //        0x01, 
        //        0x00, 
        //        0x00, 0x44, 0x65, 0x70, 0x61, 0x72, 
        //        0x74, 
        //        0x65, 
        //        0x74, 0x00, 
        //        0x01, 
        //        0x00, 0x09, 0x00, 0x50, 
        //        0x73, 0x69, 
        //        0x74, 0x69, 
        //        0x00, 
        //        0x01, 
        //        0x00, 0x08, 0x00, 0x43, 
        //        0x70, 0x61, 
        //        0x79, 0x00, 0x94, 0x02, 
        //        0x00, 
        //        0x00, 0x57, 
        //        0x72, 
        //        0x41, 0x64, 0x64, 
        //        0x72, 0x65, 0x73, 0x73, 0x00, 
        //        0x02, 0x06, 0x00, 0x04, 0x00, 0x57, 0x53, 0x74, 0x00, 
        //        0x02, 0x08, 0x00, 0x06, 0x00, 0x57, 0x43, 0x69, 0x74, 0x79, 0x00, 
        //        0x02, 
        //        0x00, 0x18, 
        //        0x00, 0x68, 0x74, 0x74, 0x70, 
        //        0x77, 
        //        0x72, 
        //        0x77, 0x65, 0x62, 
        //        0x70, 0x61, 0x67, 0x65, 
        //        0x75, 0x72, 
        //        0x00, 
        //        0x02, 0x04, 0x00, 
        //        0x56, 0x00, 
        //        0x00, 
        //        0x02, 0x02, 0x00, 0x07, 0x00, 
        //        0x01, 0x02, 0x00, 0x05, 0x00, 
        //        0x01, 0x12, 
        //        0x00, 0x64, 0x00, 
        //        0x00, 0x69, 
        //        0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 
        //        0x65, 
        //        0x79, 0x31, 0x00, 
        //        0x01, 0x12, 0x00, 0x67, 0x00, 
        //        0x00, 0x69, 
        //        0x74, 0x65, 0x72, 
        //        0x65, 0x73, 0x74, 
        //        0x65, 0x79, 0x32, 0x00, 
        //        0x01, 0x12, 0x00, 0x68, 0x00, 
        //        0x00, 0x69, 
        //        0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 
        //        0x65, 0x79, 0x33, 0x00, 
        //        0x01, 0x12, 0x00, 
        //        0x00, 
        //        0x00, 0x69, 
        //        0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 
        //        0x65, 0x79, 0x34, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x02, 0x36, 
        //        0x01, 
        //        0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 
        //        0x00, 0x01, 0x01, 0x61, 
        //        0x01, 
        //        0x00, 
        //        0x07, 
        //        0x82, 0x14, 
        //        0x00, 0x01, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
        //        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
        //        0x69, 0x63, 0x71, 
        //        0x73, 
        //        0x73, 
        //        0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 
        //        0x64, 0x65, 0x73, 0x74, 0x69, 
        //        0x61, 0x74, 0x69, 
        //        0x37, 0x39, 0x30, 0x32, 0x35, 0x34, 0x33, 0x33, 0x39, 
        //        0x39, 
        //        0x39, 0x34, 
        //        0x64, 0x65, 0x73, 0x74, 0x69, 
        //        0x61, 0x74, 0x69, 
        //        0x74, 0x65, 0x78, 0x74, 
        //        0x28, 0x52, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 
        //        0x72, 
        //        0x20, 0x20, 0x49, 0x43, 0x51, 0x29, 
        //        0x75, 0x73, 0x74, 0x20, 0x74, 
        //        0x65, 0x73, 0x74, 0x20, 0x53, 
        //        0x53, 0x20, 
        //        0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 
        //        0x28, 
        //        0x80, 
        //        0x83, 
        //        0x81, 0x29, 
        //        0x74, 0x65, 0x78, 0x74, 
        //        0x65, 
        //        0x63, 
        //        0x64, 0x69, 
        //        0x67, 
        //        0x75, 0x74, 0x66, 0x38, 
        //        0x65, 
        //        0x63, 
        //        0x64, 0x69, 
        //        0x67, 
        //        0x73, 0x65, 
        //        0x64, 0x65, 0x72, 0x73, 
        //        0x55, 0x49, 
        //        0x36, 0x32, 0x31, 0x38, 0x38, 0x39, 0x35, 
        //        0x73, 0x65, 
        //        0x64, 0x65, 0x72, 0x73, 
        //        0x55, 0x49, 
        //        0x73, 0x65, 
        //        0x64, 0x65, 
        //        0x72, 0x73, 
        //        0x61, 
        //        0x65, 
        //        0x52, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 
        //        0x72, 
        //        0x73, 0x65, 
        //        0x64, 0x65, 0x72, 0x73, 
        //        0x61, 
        //        0x65, 
        //        0x64, 0x65, 
        //        0x69, 0x76, 0x65, 0x72, 0x79, 
        //        0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 
        //        0x74, 
        //        0x59, 0x65, 0x73, 
        //        0x64, 0x65, 
        //        0x69, 0x76, 0x65, 0x72, 0x79, 
        //        0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 
        //        0x74, 0x69, 
        //        0x65, 
        //        0x53, 0x75, 
        //        0x20, 0x32, 0x35, 0x20, 
        //        0x61, 0x79, 0x20, 0x32, 0x30, 0x30, 0x33, 0x20, 0x30, 
        //        0x25, 
        //        0x03, 
        //        0x37, 
        //        0x33, 0x36, 
        //        0x30, 0x37, 0x20, 0x47, 
        //        0x54, 
        //        0x74, 0x69, 
        //        0x07, 
        //        0x65, 
        //        0x69, 0x63, 0x71, 
        //        0x73, 
        //        0x73, 
        //        0x65, 0x73, 0x73, 
        //        0x61, 0x67, 0x65, 
        //        0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        //[TestMethod]
        //public void Snac1502DeserializeTest()
        //{
        //    var data = new byte[]
        //    {
        //        0x00, 0x15, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x02, 0x00, 0x01, 0x00, 0xAA, 0xA8, 0x00, 
        //        0x92, 0xE4, 0x5E, 0x00, 0xD0, 0x07, 0x1F, 0x37, 0x08, 0x20, 0x08, 0x00, 0x31, 0x30, 0x30, 0x30, 
        //        0x00, 
        //        0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xFB, 0xAC, 0x3E, 0xBE, 0x6B, 0x73, 0x05, 
        //        0x0F, 0xC2, 0x10, 0x4F, 0xA6, 0xDE, 0x4D, 0xB1, 0xE3, 0x56, 0x4B, 0x0E, 0x01, 0x79, 0x00, 0x31, 
        //        0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x28, 0x30, 0x38, 0x3A, 0x35, 0x37, 0x20, 0x50, 0x4D, 
        //        0x00, 
        //        0x57, 
        //        0x29, 0x20, 0x3A, 0x20, 0x0D, 0x0A, 0x74, 0x65, 0x73, 0x74, 0x20, 0x6D, 0x65, 0x73, 0x73, 0x61, 
        //        0x67, 0x65, 0x31, 0x0D, 0x0A, 0x4E, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x53, 0x54, 0x20, 0x20, 
        //        0x28, 0x30, 0x38, 0x3A, 0x35, 0x37, 0x20, 0x50, 0x4D, 0x29, 0x20, 0x3A, 0x20, 0x0D, 0x0A, 0x74, 
        //        0x57, 
        //        0x65, 0x73, 0x74, 0x20, 0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x0D, 0x0A, 0x4E, 0x61, 
        //        0x74, 0x61, 0x73, 0x68, 0x61, 0x53, 0x54, 0x20, 0x20, 0x28, 0x30, 0x38, 0x3A, 0x35, 0x38, 0x20, 
        //        0x58, 
        //        0x50, 0x4D, 0x29, 0x20, 0x3A, 0x20, 0x0D, 0x0A, 0x74, 0x65, 0x73, 0x74, 0x20, 0x6D, 0x65, 0x73, 
        //        0x73, 0x61, 0x67, 0x65, 0x33, 0x0D, 0x0A, 0x00
        //    };

        //    var f = SerializationTools.DeserializeFlap(data);
        //    var s = SerializationTools.DeserializeSnac<Snac1502>(f);

        //    Assert.Inconclusive("Verify that Snac1502 was deserialized correctly.");
        //}

        [TestMethod]
        public void Snac1503DeserializeTest()
        {
            var data = new byte[]
            {
                0x2A, 0x02, 0x5A, 0x97, 0x00, 0xA6, 0x00, 0x15, 0x00, 0x03, 0x00, 0x01, 0x00, 0x1B, 0x00, 0x02,
                0x00, 0x01, 0x00, 0x98, 0x96, 0x00, 0x8F, 0xE4, 0x5E, 0x00, 0xDA, 0x07, 0x2A, 0x00, 0xD2, 0x00,
                0x0A, 0x06, 0x00, 0x77, 0x43, 0x69, 0x74, 0x79, 0x00, 0x03, 0x00, 0x53, 0x74, 0x00, 0x12, 0x00,
                0x2B, 0x37, 0x20, 0x28, 0x34, 0x32, 0x31, 0x32, 0x29, 0x20, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34,
                0x44,
                0x34, 0x00, 0x12, 0x00, 0x2B, 0x37, 0x20, 0x28, 0x34, 0x32, 0x31, 0x32, 0x29, 0x20, 0x35, 0x35,
                0x55,
                0x35, 0x35, 0x35, 0x35, 0x35, 0x00, 0x14, 0x00, 0x57, 0x6F, 0x72, 0x6B, 0x20, 0x73, 0x74, 0x72,
                0x65, 0x65, 0x74, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x00, 0x06, 0x00, 0x32, 0x32,
                0x22,
                0x32, 0x32, 0x32, 0x00, 0x07, 0x00, 0x08, 0x00, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x6E, 0x79, 0x00,
                0x0B, 0x00, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0x09, 0x00, 0x50,
                0x6F, 0x73, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x05, 0x00, 0x10, 0x00, 0x68, 0x74, 0x74, 0x70,
                0x3A, 0x2F, 0x2F, 0x77, 0x6F, 0x72, 0x6B, 0x2E, 0x6F, 0x72, 0x67, 0x00
            };

            Flap f = SerializationTools.DeserializeFlap(data);
            var s = SerializationTools.DeserializeSnac<Snac1503>(f);

            Assert.Inconclusive("Verify that Snac1503 was deserialized correctly.");
        }
    }
}